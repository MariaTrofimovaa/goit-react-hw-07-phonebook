{"version":3,"sources":["Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css","Components/filter/Filtter.module.css","redux/phonebook/phoneBook.actions.js","redux/phonebook/phoneBook.reducer.js","redux/rootReducer.js","redux/store.js","redux/phonebook/phonebook.selectors.js","Components/filter/Filter.js","redux/phonebook/phoneBook.operations.js","Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsFailure","addContactRequest","addContactSuccess","addContactFailure","removeContactRequest","removeContactSuccess","removeContactFailure","filterContact","itemsReducer","createReducer","_","action","payload","state","filter","item","id","filterReducer","loader","phoneBookReducer","combineReducers","items","loading","rootReducer","contacts","store","configureStore","reducer","getContactsSelector","filterSelector","getLoader","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","mapDispatchToProps","handleChange","evt","target","value","connect","className","styles","input","type","placeholder","onChange","axios","defaults","baseURL","ContactForm","number","event","setState","handleSubmit","preventDefault","props","find","alert","addContact","reset","this","getContacts","formContainer","onSubmit","inputData","pattern","title","required","addBtn","Component","prototypes","PropTypes","func","isRequired","dispatch","a","get","data","post","response","onDelete","delete","color","height","width","contactsList","map","deleteBtn","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"0EACAA,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,UAAY,+BAA+B,OAAS,8B,mBCAzHD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,QAAU,6BAA6B,UAAY,iC,mBCAtHD,EAAOC,QAAU,CAAC,MAAQ,yB,gICEpBC,EAAqBC,YAAa,iCAClCC,EAAqBD,YAAa,iCAClCE,EAAqBF,YAAa,iCAGlCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAoBL,YAAa,8BAGjCM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAuBR,YAAa,iCAGpCS,EAAgBT,YAAa,8BCJ7BU,EAAeC,YAAc,IAAD,mBAC/BV,GAAqB,SAACW,EAAGC,GAAJ,mBAAmBA,EAAOC,YADhB,cAE/BV,GAAoB,SAACW,EAAOF,GAC3B,MAAM,GAAN,mBAAWE,GAAX,CAAkBF,EAAOC,aAHK,cAK/BP,GAAuB,SAACQ,EAAOF,GAAR,mBACnBE,EAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOL,EAAOC,eANf,IAU5BK,EAAgBR,YAAc,GAAD,eAChCF,GAAgB,SAACG,EAAGC,GAAJ,OAAeA,EAAOC,YAGnCM,EAAST,aAAc,GAAD,mBACzBZ,GAAqB,kBAAM,KADF,cAEzBE,GAAqB,kBAAM,KAFF,cAGzBC,GAAqB,kBAAM,KAHF,cAKzBC,GAAoB,kBAAM,KALD,cAMzBC,GAAoB,kBAAM,KAND,cAOzBC,GAAoB,kBAAM,KAPD,cASzBC,GAAuB,kBAAM,KATJ,cAUzBC,GAAuB,kBAAM,KAVJ,cAWzBC,GAAuB,kBAAM,KAXJ,IAoBba,EANUC,YAAgB,CACvCC,MAAOb,EACPM,OAAQG,EACRK,QAASJ,ICrCIK,EAJKH,YAAgB,CAChCI,SAAUL,ICCCM,EAHDC,YAAe,CAC3BC,QAASJ,I,wDCFLK,EAAsB,SAACf,GAAD,OAAWA,EAAMW,SAASH,OAEhDQ,EAAiB,SAAChB,GAAD,OAAWA,EAAMW,SAASV,QAE3CgB,EAAY,SAACjB,GAAD,OAAWA,EAAMW,SAASF,SAEtCS,EAAsBC,YAC1B,CAACJ,EAAqBC,IACtB,SAACL,EAAUV,GACT,IAAMmB,EAAmBnB,EAAOoB,cAEhC,OAAOV,EAASV,QAAO,SAACqB,GAAD,OACrBA,EAAQC,KAAKF,cAAcG,SAASJ,S,OCkBpCK,EAAqB,CACzBC,aAAc,SAACC,GAAD,OAASjC,EAAciC,EAAIC,OAAOC,SAGnCC,eARS,SAAC9B,GAAD,MAAY,CAClCC,OAAQe,EAAehB,MAOeyB,EAAzBK,EA5BA,SAAC,GAA8B,IAA5B7B,EAA2B,EAA3BA,OAAQyB,EAAmB,EAAnBA,aACxB,OACE,gCACE,uBACEK,UAAWC,IAAOC,MAClBC,KAAK,OACLX,KAAK,SACLY,YAAY,uBACZN,MAAO5B,EACPmC,SAAUV,S,0ECJlBW,IAAMC,SAASC,QAAU,wBAEzB,ICJMC,E,4MACJxC,MAAQ,CACNuB,KAAM,GACNkB,OAAQ,I,EAOVf,aAAe,SAACgB,GACd,MAAwBA,EAAMd,OAAtBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKc,SAAL,eAAiBpB,EAAOM,K,EAG1Be,aAAe,SAACF,GACdA,EAAMG,iBAEe,EAAKC,MAAMnC,SAASoC,MACvC,SAACzB,GAAD,OAAaA,EAAQC,OAAS,EAAKvB,MAAMuB,QAIzCyB,MAAM,eAAD,OAAgB,EAAKhD,MAAMuB,KAA3B,4BAGP,EAAKuB,MAAMG,WAAW,EAAKjD,OAC3B,EAAKkD,U,EAGPA,MAAQ,WACN,EAAKP,SAAS,CAAEpB,KAAM,GAAIkB,OAAQ,M,uDAzBpC,WACEU,KAAKL,MAAMM,gB,oBA2Bb,WACE,OACE,qBAAKrB,UAAWC,IAAOqB,cAAvB,SACE,uBAAMC,SAAUH,KAAKP,aAArB,UACE,gCACE,uBACEb,UAAWC,IAAOuB,UAClBrB,KAAK,OACLX,KAAK,OACLY,YAAY,QACZN,MAAOsB,KAAKnD,MAAMuB,KAClBa,SAAUe,KAAKzB,aACf8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,MAIZ,gCACE,uBACE3B,UAAWC,IAAOuB,UAClBrB,KAAK,MACLX,KAAK,SACLY,YAAY,UACZN,MAAOsB,KAAKnD,MAAMyC,OAClBL,SAAUe,KAAKzB,aACf8B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,MAGZ,wBAAQxB,KAAK,SAASH,UAAWC,IAAO2B,OAAxC,kC,GAjEgBC,aA0E1BpB,EAAYqB,WAAa,CACvBZ,WAAYa,IAAUC,KAAKC,YAG7B,IAIMvC,EAAqB,CAAE2B,YD9ET,yDAAM,WAAOa,GAAP,iBAAAC,EAAA,6DACxBD,EAASjF,KADe,kBAGCqD,IAAM8B,IAAI,aAHX,gBAGdC,EAHc,EAGdA,KACRH,EAAS/E,EAAmBkF,IAJN,gDAMtBH,EAAS9E,EAAmB,EAAD,KANL,yDAAN,uDC8EsB8D,WDnExC,SAAC,GAAD,IAAG1B,EAAH,EAAGA,KAAMkB,EAAT,EAASA,OAAT,8CACA,WAAOwB,GAAP,iBAAAC,EAAA,6DACQ5C,EAAU,CAAEC,OAAMkB,UACxBwB,EAAS7E,KAFX,kBAI2BiD,IAAMgC,KAAK,YAAa/C,GAJnD,OAIUgD,EAJV,OAKIL,EAAS5E,EAAkBiF,EAASF,OALxC,gDAOIH,EAAS3E,EAAkB,EAAD,KAP9B,yDADA,wDCqEawC,gBANS,SAAC9B,GAAD,MAAY,CAClCW,SAAUI,EAAoBf,MAKQyB,EAAzBK,CAA6CU,G,wCCxCtDf,GAAqB,CACzB8C,SFlBoB,SAACpE,GAAD,8CAAQ,WAAO8D,GAAP,SAAAC,EAAA,6DAC5BD,EAAS1E,KADmB,kBAGpB8C,IAAMmC,OAAN,oBAA0BrE,IAHN,OAI1B8D,EAASzE,EAAqBW,IAJJ,gDAM1B8D,EAASxE,EAAqB,EAAD,KANH,yDAAR,wDEqBPqC,gBAZS,SAAC9B,GACvB,MAAO,CACLW,SAAUO,EAAoBlB,GAC9BC,OAAQe,EAAehB,GACvBS,QAASQ,EAAUjB,MAQiByB,GAAzBK,EA9CK,SAAC,GAAqC,IAAnCnB,EAAkC,EAAlCA,SAAU4D,EAAwB,EAAxBA,SAAU9D,EAAc,EAAdA,QACzC,OACE,qCACGA,GACC,cAAC,KAAD,CAAQyB,KAAK,YAAYuC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE9D,oBAAI5C,UAAWC,KAAO4C,aAAtB,SACGjE,EAASkE,KAAI,SAACvD,GAAD,OACZ,qBAAqBS,UAAWC,KAAOV,QAAvC,UACGA,EAAQC,KADX,KACmBD,EAAQmB,OACzB,wBACEV,UAAWC,KAAO8C,UAClB5C,KAAK,SACL6C,QAAS,kBAAMR,EAASjD,EAAQnB,KAHlC,sBAFOmB,EAAQnB,eCFZ6E,G,4JAbb,WACE,OACE,sBAAKjD,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,wBACA,cAAC,GAAD,IACA,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,IACA,cAAC,GAAD,W,GARU6B,a,YCMlBqB,IAASC,OACP,cAAC,IAAD,CAAUtE,MAAOA,EAAjB,SACI,cAAC,GAAD,MAEJuE,SAASC,eAAe,W","file":"static/js/main.21f95e8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__7qlyn\",\"inputData\":\"ContactForm_inputData__23tYo\",\"addBtn\":\"ContactForm_addBtn__1uBQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3v4hC\",\"contact\":\"ContactList_contact__1X2vB\",\"deleteBtn\":\"ContactList_deleteBtn__30bR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filtter_input__36xG7\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// ***** get contacts ***** //\r\nconst getContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst getContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst getContactsFailure = createAction(\"contacts/fetchContactsFailure\");\r\n\r\n// ***** add contacts ***** //\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactFailure = createAction(\"contacts/addContactFailure\");\r\n\r\n// ***** remove contacts ***** //\r\nconst removeContactRequest = createAction(\"contacts/removeContactRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeContactSuccess\");\r\nconst removeContactFailure = createAction(\"contacts/removeContactFailure\");\r\n\r\n// ***** filter contacts ***** //\r\nconst filterContact = createAction(\"contacts/filterÐ¡hange\");\r\n\r\nexport {\r\n  filterContact,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactFailure,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactFailure,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsFailure,\r\n};\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getContactsSuccess,\r\n  addContactSuccess,\r\n  removeContactSuccess,\r\n  filterContact,\r\n  getContactsRequest,\r\n  getContactsFailure,\r\n  addContactRequest,\r\n  addContactFailure,\r\n  removeContactRequest,\r\n  removeContactFailure,\r\n} from \"./phoneBook.actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, action) => [...action.payload],\r\n  [addContactSuccess]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [removeContactSuccess]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsFailure]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactFailure]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactFailure]: () => false,\r\n});\r\n\r\nconst phoneBookReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loader,\r\n});\r\n\r\nexport default phoneBookReducer;\r\n","import { combineReducers } from \"redux\"\r\nimport phoneBookReducer from \"./phonebook/phoneBook.reducer.js\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: phoneBookReducer,\r\n})\r\n\r\nexport default rootReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;","import { createSelector } from \"reselect\";\r\n\r\nconst getContactsSelector = (state) => state.contacts.items;\r\n\r\nconst filterSelector = (state) => state.contacts.filter;\r\n\r\nconst getLoader = (state) => state.contacts.loading;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContactsSelector, filterSelector],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport { getContactsSelector, filterSelector, getLoader, getFilteredContacts };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Filtter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { filterSelector } from \"../../redux/phonebook/phonebook.selectors\";\r\nimport { filterContact } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Find contact by name\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: filterSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: (evt) => filterContact(evt.target.value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactFailure,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  getContactsFailure,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  removeContactFailure,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from \"./phoneBook.actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001\";\r\n\r\nconst getContacts = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsFailure(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const response = await axios.post(\"/contacts\", contact);\r\n      dispatch(addContactSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(addContactFailure(error));\r\n    }\r\n  };\r\n\r\nconst removeContact = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactFailure(error));\r\n  }\r\n};\r\n\r\nexport { getContacts, addContact, removeContact };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getContacts,\r\n  addContact,\r\n} from \"../../redux/phonebook/phoneBook.operations\";\r\nimport { getContactsSelector } from \"../../redux/phonebook/phonebook.selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const contactExist = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    if (contactExist) {\r\n      alert(`Contact <-- ${this.state.name} --> already exists`);\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.formContainer}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input\r\n              className={styles.inputData}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name:\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\r\n              title=\"ÐÐ¼Ñ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¸Ð· Ð±ÑÐºÐ², Ð°Ð¿Ð¾ÑÑÑÐ¾ÑÐ°, ÑÐ¸ÑÐµ Ð¸ Ð¿ÑÐ¾Ð±ÐµÐ»Ð¾Ð². ÐÐ°Ð¿ÑÐ¸Ð¼ÐµÑ Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan Ð¸ Ñ. Ð¿.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              className={styles.inputData}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Number:\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"ÐÐ¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð° Ð´Ð¾Ð»Ð¶ÐµÐ½ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¸ÑÑ Ð¸ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑ Ð¿ÑÐ¾Ð±ÐµÐ»Ñ, ÑÐ¸ÑÐµ, ÐºÑÑÐ³Ð»ÑÐµ ÑÐºÐ¾Ð±ÐºÐ¸ Ð¸ Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸Ð½Ð°ÑÑÑÑ Ñ +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.addBtn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.prototypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContactsSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = { getContacts, addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { removeContact } from \"../../redux/phonebook/phoneBook.operations\";\r\nimport {\r\n  getFilteredContacts,\r\n  filterSelector,\r\n  getLoader,\r\n} from \"../../redux/phonebook/phonebook.selectors\";\r\n\r\nconst ContactList = ({ contacts, onDelete, loading }) => {\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Loader type=\"ThreeDots\" color=\"#8f73c2\" height={80} width={80} />\r\n      )}\r\n      <ul className={styles.contactsList}>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id} className={styles.contact}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className={styles.deleteBtn}\r\n              type=\"button\"\r\n              onClick={() => onDelete(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getFilteredContacts(state),\r\n    filter: filterSelector(state),\r\n    loading: getLoader(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"title\">Phonebook:</h2>\r\n        <ContactForm />\r\n        <h2 className=\"title\">Contacts:</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport  store from \"./redux/store\";\n\nimport App from \"./Components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}